// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductService.Api.Data;

#nullable disable

namespace ProductService.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240901210109_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductService.Api.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Technology"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fashion"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Health"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sports"
                        });
                });

            modelBuilder.Entity("ProductService.Api.Models.ColorOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ColorOption");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Red",
                            Img = "red1.jpg",
                            ProductId = 1,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 2,
                            Color = "Blue",
                            Img = "blue1.jpg",
                            ProductId = 1,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 3,
                            Color = "Green",
                            Img = "green2.jpg",
                            ProductId = 2,
                            Quantity = 8
                        },
                        new
                        {
                            Id = 4,
                            Color = "Yellow",
                            Img = "yellow3.jpg",
                            ProductId = 3,
                            Quantity = 15
                        },
                        new
                        {
                            Id = 5,
                            Color = "Black",
                            Img = "black4.jpg",
                            ProductId = 4,
                            Quantity = 7
                        },
                        new
                        {
                            Id = 6,
                            Color = "White",
                            Img = "white5.jpg",
                            ProductId = 5,
                            Quantity = 12
                        });
                });

            modelBuilder.Entity("ProductService.Api.Models.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Labels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "New"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sale"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Best Seller"
                        });
                });

            modelBuilder.Entity("ProductService.Api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoverImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "This is Product 1",
                            HoverImg = "hoverImg1.jpg",
                            Img = "/images/product1.png",
                            Price = 149.99m,
                            Title = "Product 1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "This is Product 2",
                            HoverImg = "hoverImg2.jpg",
                            Img = "/images/success-kid.png",
                            Price = 129.99m,
                            Title = "Product 2"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "This is Product 3",
                            HoverImg = "hoverImg3.jpg",
                            Img = "/images/product2.png",
                            Price = 249.99m,
                            Title = "Product 3"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "This is Product 4",
                            HoverImg = "hoverImg4.jpg",
                            Img = "/images/product3.png",
                            Price = 349.99m,
                            Title = "Product 4"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Description = "This is Product 5",
                            HoverImg = "hoverImg5.jpg",
                            Img = "/images/product4.png",
                            Price = 149.99m,
                            Title = "Product 5"
                        });
                });

            modelBuilder.Entity("ProductService.Api.Models.ProductLabel", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("LabelId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "LabelId");

                    b.HasIndex("LabelId");

                    b.ToTable("ProductLabel");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            LabelId = 1
                        },
                        new
                        {
                            ProductId = 1,
                            LabelId = 2
                        },
                        new
                        {
                            ProductId = 2,
                            LabelId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            LabelId = 3
                        },
                        new
                        {
                            ProductId = 4,
                            LabelId = 2
                        },
                        new
                        {
                            ProductId = 5,
                            LabelId = 3
                        });
                });

            modelBuilder.Entity("ProductService.Api.Models.ColorOption", b =>
                {
                    b.HasOne("ProductService.Api.Models.Product", "Product")
                        .WithMany("ColorOptions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductService.Api.Models.Product", b =>
                {
                    b.HasOne("ProductService.Api.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ProductService.Api.Models.Rating", "Rating", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .HasColumnType("int");

                            b1.Property<double>("Max")
                                .HasColumnType("float");

                            b1.Property<double>("Min")
                                .HasColumnType("float");

                            b1.Property<int>("Reviews")
                                .HasColumnType("int");

                            b1.Property<double>("Stars")
                                .HasColumnType("float");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");

                            b1.HasData(
                                new
                                {
                                    ProductId = 1,
                                    Max = 5.0,
                                    Min = 0.0,
                                    Reviews = 20,
                                    Stars = 4.5
                                },
                                new
                                {
                                    ProductId = 2,
                                    Max = 5.0,
                                    Min = 0.0,
                                    Reviews = 15,
                                    Stars = 4.0
                                },
                                new
                                {
                                    ProductId = 3,
                                    Max = 5.0,
                                    Min = 0.0,
                                    Reviews = 30,
                                    Stars = 4.7999999999999998
                                },
                                new
                                {
                                    ProductId = 4,
                                    Max = 5.0,
                                    Min = 0.0,
                                    Reviews = 40,
                                    Stars = 3.5
                                },
                                new
                                {
                                    ProductId = 5,
                                    Max = 5.0,
                                    Min = 0.0,
                                    Reviews = 10,
                                    Stars = 4.2000000000000002
                                });
                        });

                    b.Navigation("Category");

                    b.Navigation("Rating")
                        .IsRequired();
                });

            modelBuilder.Entity("ProductService.Api.Models.ProductLabel", b =>
                {
                    b.HasOne("ProductService.Api.Models.Label", "Label")
                        .WithMany("ProductLabels")
                        .HasForeignKey("LabelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductService.Api.Models.Product", "Product")
                        .WithMany("ProductLabels")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Label");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductService.Api.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProductService.Api.Models.Label", b =>
                {
                    b.Navigation("ProductLabels");
                });

            modelBuilder.Entity("ProductService.Api.Models.Product", b =>
                {
                    b.Navigation("ColorOptions");

                    b.Navigation("ProductLabels");
                });
#pragma warning restore 612, 618
        }
    }
}
